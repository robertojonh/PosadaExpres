


La renta de la habitacion puntos a conciderar
[] Cambiar el estado de la habitacion
[] Guardar la renta
[] Pensar en el manejo de las habitaciones rentadas, tema, No poder cambiar sus estados mientas esten rentadas,
no poder editarlas, no poder rentarlas.
[] Realizar otro apartado para desglozar las rentas realizadas en el dia - mes - meses - anio.
    [] Realizar consulta personal de que quieren en ese apartado
    [] Realizar consulta de que necesitan en el apartado de rentas, como lo realizan y demas.
[] 

Tipo de renta
1 renta por horas
2 renta por noches (este toma el precio por noche de la habitacion y pues calcula el total)


<!-- <div class="row row-cols-1 row-cols-md-4 g-3" style="padding-top: 2rem;" id="row">
                <?php foreach ($habitaciones as $habitacion):
                    $estadoClase = '';
                    switch ($habitacion->estado) {
                        case 'libre':
                            $estadoClase = 'border-success text-success';
                            break;
                        case 'ocupada':
                            $estadoClase = 'border-danger text-danger';
                            break;
                        case 'reservada':
                            $estadoClase = 'border-warning text-warning';
                            break;
                        case 'no_disponible':
                            $estadoClase = 'border-secondary text-secondary';
                            break;
                        default:
                            $estadoClase = 'border-secondary text-secondary';
                            break;
                    }
                    ?>
                    <div class="col">
                        <div class="card shadow-sm h-100 <?= $estadoClase ?>" style="border-width: 2px;">
                            <div class="card-body">
                                <h5 class="card-title text-center">Habitación Número: <?= $habitacion->num ?></h5>
                                <p class="text-center fw-bold">
                                    Estado: <?= ucfirst($habitacion->estado) ?>
                                </p>
                                <div class="d-flex justify-content-center align-items-center">
                                    <?php for ($i = 1; $i <= $habitacion->num_camas; $i++): ?>
                                        <i class="fas fa-2x fa-solid fa-bed me-2"></i>
                                    <?php endfor; ?>
                                </div>
                                <p id="precioHabitacion" class="text-center precio-habitacion">
                                    Precio por Noche: $<?= number_format($habitacion->precio, 2) ?></p>
                                <div class="dropdown position-absolute bottom-0 end-0 me-2 mb-2">
                                    <button class="btn btn-sm btn-outline-secondary" type="button"
                                        id="dropdownMenuButton<?= $habitacion->habitacion_id ?>" data-bs-toggle="dropdown"
                                        aria-expanded="false">
                                        <i class="fas fa-list-ul"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end"
                                        aria-labelledby="dropdownMenuButton<?= $habitacion->habitacion_id ?>">
                                        <li>
                                            <?php if ($habitacion->estado == "libre"): ?>
                                                <a class="dropdown-item text-secondary" style="cursor: pointer;"
                                                    onclick="rentar(this, '<?= $habitacion->habitacion_id ?>')">
                                                    Rentar
                                                </a>
                                                <a class="dropdown-item text-secondary" style="cursor: pointer;"
                                                    onclick="reservar(this, '<?= $habitacion->habitacion_id ?>')">
                                                    Reservar
                                                </a>
                                            <?php endif; ?>
                                            <?php if ($habitacion->estado == "ocupada"): ?>
                                                <a class="dropdown-item text-secondary" style="cursor: pointer;"
                                                    onclick="desocupar(this, '<?= $habitacion->habitacion_id ?>')">
                                                    Liberar
                                                </a>

                                            <?php endif; ?>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>

                <?php endforeach; ?>
            </div> -->

Card para agregar info de renta (quitado el 16 de enero)
/* function cambiarEstadoHabitacion(elemento, estado, habitacion_id, data) {
  const card = elemento.closest(".card");
  card.classList.remove(
    "border-success",
    "text-success",
    "border-danger",
    "text-danger",
    "border-warning",
    "text-warning"
  );
  const estadoText = card.querySelector("p");
  const dropdownMenu = $(elemento).closest(".dropdown").find(".dropdown-menu");
  switch (estado) {
    case "libre":
      card.classList.add("border-success", "text-success");
      estadoText.textContent = "Estado: Libre";
      dropdownMenu.html(`<li>
            <a class="dropdown-item text-secondary" style="cursor: pointer;"
                onclick="rentar(this, '${habitacion_id}')">
                Rentar
            </a>
            <a class="dropdown-item text-secondary" style="cursor: pointer;"
                onclick="reservar(this, '${habitacion_id}')">
                Reservar
            </a>
        </li>`);
      break;
    case "no_disponible":
      card.classList.add("border-secondary", "text-secondary");
      estadoText.textContent = "Estado: No Disponible";
      break;
    case "ocupada":
      card.classList.add("border-danger", "text-danger");
      estadoText.textContent = "Estado: Ocupada";
      dropdownMenu.html(`<li>
            <a class="dropdown-item text-secondary" style="cursor: pointer;"
                onclick="desocupar(this, '${habitacion_id}')">
                Liberar
            </a>
        </li>`);
      break;
    case "reservada":
      card.classList.add("border-warning", "text-warning");
      estadoText.textContent = "Estado: Reservada";
      break;
    default:
      estadoText.textContent = "Estado: Desconocido";
      break;
  }
} */

/* function cambiarEstadoHabitacion(elemento, estado, habitacion_id, data) {
  const card = elemento.closest(".card");
  card.classList.remove(
    "border-success",
    "text-success",
    "border-danger",
    "text-danger",
    "border-warning",
    "text-warning"
  );
  const estadoText = card.querySelector("p");
  const dropdownMenu = $(elemento).closest(".dropdown").find(".dropdown-menu");
  const cardBody = card.querySelector(".card-body");

  switch (estado) {
    case "libre":
      card.classList.add("border-success", "text-success");
      estadoText.textContent = "Estado: Libre";
      dropdownMenu.html(`
        <li>
          <a class="dropdown-item text-secondary" style="cursor: pointer;"
              onclick="rentar(this, '${habitacion_id}')">
              Rentar
          </a>
          <a class="dropdown-item text-secondary" style="cursor: pointer;"
              onclick="reservar(this, '${habitacion_id}')">
              Reservar
          </a>
        </li>
      `);
      break;
    case "no_disponible":
      card.classList.add("border-secondary", "text-secondary");
      estadoText.textContent = "Estado: No Disponible";
      break;
    case "ocupada":
      card.classList.add("border-danger", "text-danger");
      estadoText.textContent = "Estado: Ocupada";
      dropdownMenu.html(`
        <li>
          <a class="dropdown-item text-secondary" style="cursor: pointer;"
              onclick="desocupar(this, '${habitacion_id}')">
              Liberar
          </a>
        </li>
      `);
      const rentaInfo = `
        <button class="btn btn-outline-primary btn-sm mb-3" type="button" data-bs-toggle="collapse"
          data-bs-target="#rentaInfo${habitacion_id}" aria-expanded="false"
          aria-controls="rentaInfo${habitacion_id}">
          Ver Detalles de Renta
        </button>
        <div class="collapse" id="rentaInfo${habitacion_id}">
          <div class="bg-light p-3 rounded border">
            <p><strong>Tipo:</strong> <span class="text-primary">${
              data.tipo === 1 ? "Por Horas" : "Por Noche"
            }</span></p>
            <p><strong>Tipo:</strong> Por Horas </p>
            <p><strong>Inicio:</strong> ${data.fechaInicio}</p>
            <p><strong>Inicio:</strong> ${data.fechaFin}</p>
            ${
              data.tipo === 2
                ? `
                <p><strong>Tipo:</strong> Por Horas </p>
              <p><strong>Huésped:</strong> ${data.nombreHuesped}</p>
              <p><strong>Teléfono:</strong> ${data.telefonoHuesped}</p>
              <p><strong>Noches:</strong> ${data.numNoches}</p>
              <p><strong>Noches:</strong> ${data.fechaInicio}</p>`
                : ""
            }
            <p><strong>Observaciones:</strong> ${
              data.observaciones || "Ninguna"
            }</p>
          </div>
        </div>`;
      const existingRentaInfo = cardBody.querySelector(`#infoRenta`);
      if (existingRentaInfo) {
        existingRentaInfo.parentElement.outerHTML = rentaInfo;
      } else {
        cardBody.insertAdjacentHTML("beforeend", rentaInfo);
      }
      break;
    case "reservada":
      card.classList.add("border-warning", "text-warning");
      estadoText.textContent = "Estado: Reservada";
      break;
    default:
      estadoText.textContent = "Estado: Desconocido";
      break;
  }
} */




